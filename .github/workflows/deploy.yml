name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd frontend && npm install
          cd ../backend && npm install

      - name: Build project
        run: |
          npm run build:frontend
          npm run build:backend

      - name: Deploy to Vercel
        id: vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

      - name: Comment PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          VERCEL_URL: ${{ steps.vercel.outputs.url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Deployment successful!**\n\n- **Preview URL**: ${process.env.VERCEL_URL}\n- **Production URL**: https://cogodo.github.io/kashibotto`
            })

  test-deployment:
    name: Test Deployment
    runs-on: ubuntu-latest
    needs: [deploy]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Test Frontend Health
        run: |
          echo "Testing frontend deployment..."
          # Add your project URL here after first deployment
          # curl -f https://your-project.vercel.app/ || exit 1

      - name: Test Backend Health
        run: |
          echo "Testing backend deployment..."
          # Add your project URL here after first deployment
          # curl -f https://your-project.vercel.app/api || exit 1

      - name: Test API Endpoints
        run: |
          echo "Testing API endpoints..."
          # Add your project URL here after first deployment
          # curl -f "https://your-project.vercel.app/api/search?q=Âêõ„ÅÆÂêç„ÅØ" || exit 1

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [deploy, test-deployment]
    if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Success Notification
        run: |
          echo "üéâ Deployment successful!"
          echo "Frontend: https://cogodo.github.io/kashibotto"
          echo "Backend: https://your-project.vercel.app/api"
          echo "Check Vercel dashboard for deployment status."
